{"version":3,"file":"ngx-colors.mjs","sources":["../../../projects/ngx-colors/src/lib/helpers/formats.ts","../../../projects/ngx-colors/src/lib/enums/formats.ts","../../../projects/ngx-colors/src/lib/helpers/default-colors.ts","../../../projects/ngx-colors/src/lib/clases/formats.ts","../../../projects/ngx-colors/src/lib/clases/color.ts","../../../projects/ngx-colors/src/lib/services/converter.service.ts","../../../projects/ngx-colors/src/lib/clases/slider.ts","../../../projects/ngx-colors/src/lib/directives/slider.directive.ts","../../../projects/ngx-colors/src/lib/components/color-picker/color-picker.component.html","../../../projects/ngx-colors/src/lib/components/color-picker/color-picker.component.ts","../../../projects/ngx-colors/src/lib/components/panel/panel.component.html","../../../projects/ngx-colors/src/lib/components/panel/panel.component.ts","../../../projects/ngx-colors/src/lib/services/overlay-styles.ts","../../../projects/ngx-colors/src/lib/services/panel-factory.service.ts","../../../projects/ngx-colors/src/lib/directives/ngx-colors-trigger.directive.ts","../../../projects/ngx-colors/src/lib/ngx-colors.component.ts","../../../projects/ngx-colors/src/lib/ngx-colors.component.html","../../../projects/ngx-colors/src/lib/ngx-colors.module.ts","../../../projects/ngx-colors/src/lib/validators/valid-color.validator.ts","../../../projects/ngx-colors/src/public-api.ts","../../../projects/ngx-colors/src/ngx-colors.ts"],"sourcesContent":["export const formats = ['hex','rgba','hsla', 'cmyk']","export enum ColorFormats {\r\n    HEX,\r\n    RGBA,\r\n    HSLA,\r\n    CMYK\r\n  }","export const defaultColors = [\r\n    {\r\n        color: \"rojo\", preview: \"#E57373\", variants:\r\n            [\"#FFEBEE\", \"#FFCDD2\", \"#EF9A9A\", \"#E57373\", \"#EF5350\", \"#F44336\", \"#E53935\", \"#D32F2F\", \"#C62828\"]\r\n    },\r\n    {\r\n        color: \"rosa\", preview: \"#F06292\", variants:\r\n            [\"#FCE4EC\", \"#F8BBD0\", \"#F48FB1\", \"#F06292\", \"#EC407A\", \"#E91E63\", \"#D81B60\", \"#C2185B\", \"#AD1457\"]\r\n    },\r\n    {\r\n        color: \"purpura\", preview: \"#BA68C8\", variants:\r\n            [\"#F3E5F5\", \"#E1BEE7\", \"#CE93D8\", \"#BA68C8\", \"#AB47BC\", \"#9C27B0\", \"#8E24AA\", \"#7B1FA2\", \"#6A1B9A\"]\r\n    },\r\n    {\r\n        color: \"purpura oscuro\", preview: \"#9575CD\", variants:\r\n            [\"#EDE7F6\", \"#D1C4E9\", \"#B39DDB\", \"#9575CD\", \"#7E57C2\", \"#673AB7\", \"#5E35B1\", \"#512DA8\", \"#4527A0\"]\r\n    },\r\n    {\r\n        color: \"indigo\", preview: \"#7986CB\", variants:\r\n            [\"#E8EAF6\", \"#C5CAE9\", \"#9FA8DA\", \"#7986CB\", \"#5C6BC0\", \"#3F51B5\", \"#3949AB\", \"#303F9F\", \"#283593\"]\r\n    },\r\n    {\r\n        color: \"azul\", preview: \"#64B5F6\", variants:\r\n            [\"#E3F2FD\", \"#BBDEFB\", \"#90CAF9\", \"#64B5F6\", \"#42A5F5\", \"#2196F3\", \"#1E88E5\", \"#1976D2\", \"#1565C0\"]\r\n    },\r\n    {\r\n        color: \"celeste\", preview: \"#4FC3F7\", variants:\r\n            [\"#E1F5FE\", \"#B3E5FC\", \"#81D4FA\", \"#4FC3F7\", \"#29B6F6\", \"#03A9F4\", \"#039BE5\", \"#0288D1\", \"#0277BD\"]\r\n    },\r\n    {\r\n        color: \"cyan\", preview: \"#4DD0E1\", variants:\r\n            [\"#E0F7FA\", \"#B2EBF2\", \"#80DEEA\", \"#4DD0E1\", \"#26C6DA\", \"#00BCD4\", \"#00ACC1\", \"#0097A7\", \"#00838F\"]\r\n    },\r\n    {\r\n        color: \"color\", preview: \"#4DB6AC\", variants:\r\n            [\"#E0F2F1\", \"#B2DFDB\", \"#80CBC4\", \"#4DB6AC\", \"#26A69A\", \"#009688\", \"#00897B\", \"#00796B\", \"#00695C\"]\r\n    },\r\n    {\r\n        color: \"verde\", preview: \"#81C784\", variants:\r\n            [\"#E8F5E9\", \"#C8E6C9\", \"#A5D6A7\", \"#81C784\", \"#66BB6A\", \"#4CAF50\", \"#43A047\", \"#388E3C\", \"#2E7D32\"]\r\n    },\r\n    {\r\n        color: \"verde claro\", preview: \"#AED581\", variants:\r\n            [\"#F1F8E9\", \"#DCEDC8\", \"#C5E1A5\", \"#AED581\", \"#9CCC65\", \"#8BC34A\", \"#7CB342\", \"#689F38\", \"#558B2F\"]\r\n    },\r\n    {\r\n        color: \"lima\", preview: \"#DCE775\", variants:\r\n            [\"#F9FBE7\", \"#F0F4C3\", \"#E6EE9C\", \"#DCE775\", \"#D4E157\", \"#CDDC39\", \"#C0CA33\", \"#AFB42B\", \"#9E9D24\"]\r\n    },\r\n    {\r\n        color: \"amarillo\", preview: \"#FFF176\", variants:\r\n            [\"#FFFDE7\", \"#FFF9C4\", \"#FFF59D\", \"#FFF176\", \"#FFEE58\", \"#FFEB3B\", \"#FDD835\", \"#FBC02D\", \"#F9A825\"]\r\n    },\r\n    {\r\n        color: \"ambar\", preview: \"#FFD54F\", variants:\r\n            [\"#FFF8E1\", \"#FFECB3\", \"#FFE082\", \"#FFD54F\", \"#FFCA28\", \"#FFC107\", \"#FFB300\", \"#FFA000\", \"#FF8F00\"]\r\n    },\r\n    {\r\n        color: \"naranja\", preview: \"#FFB74D\", variants:\r\n            [\"#FFF3E0\", \"#FFE0B2\", \"#FFCC80\", \"#FFB74D\", \"#FFA726\", \"#FF9800\", \"#FB8C00\", \"#F57C00\", \"#EF6C00\"]\r\n    },\r\n    {\r\n        color: \"naranja oscuro\", preview: \"#FF8A65\", variants:\r\n            [\"#FBE9E7\", \"#FFCCBC\", \"#FFAB91\", \"#FF8A65\", \"#FF7043\", \"#FF5722\", \"#F4511E\", \"#E64A19\", \"#D84315\"]\r\n    },\r\n    {\r\n        color: \"marron\", preview: \"#A1887F\", variants:\r\n            [\"#EFEBE9\", \"#D7CCC8\", \"#BCAAA4\", \"#A1887F\", \"#8D6E63\", \"#795548\", \"#6D4C41\", \"#5D4037\", \"#4E342E\"]\r\n    },\r\n    {\r\n        color: \"escala de grises\", preview: \"#E0E0E0\", variants:\r\n            [\"#FFFFFF\", \"#FAFAFA\", \"#F5F5F5\", \"#EEEEEE\", \"#E0E0E0\", \"#BDBDBD\", \"#9E9E9E\", \"#757575\", \"#616161\", \"#424242\", \"#000000\"]\r\n    },\r\n    {\r\n        color: \"azul gris\", preview: \"#90A4AE\", variants:\r\n            [\"#ECEFF1\", \"#CFD8DC\", \"#B0BEC5\", \"#90A4AE\", \"#78909C\", \"#607D8B\", \"#546E7A\", \"#455A64\", \"#37474F\"]\r\n    }] \r\n","import { EventEmitter, Output } from '@angular/core';\r\nimport { ColorFormats } from '../enums/formats';\r\nimport { ConverterService } from '../services/converter.service';\r\n\r\nexport class Rgba {\r\n  constructor(public r: number, public g: number, public b: number, public a: number) {}\r\n\r\n  public denormalize():Rgba{\r\n    this.r = Math.round(this.r * 255);\r\n    this.g = Math.round(this.g * 255);\r\n    this.b = Math.round(this.b * 255);\r\n    return this;\r\n  }\r\n\r\n  public toString():string{\r\n    this.denormalize();\r\n    let output =  \r\n    'rgb' + \r\n    (this.a != 1 ? 'a(' : '(')+\r\n    this.r + ', ' +\r\n    this.g + ', ' +\r\n    this.b + \r\n    (this.a != 1 ? ', ' + this.a.toPrecision(2) + ')' : ')')\r\n    return output;\r\n  }\r\n\r\n\r\n}\r\n\r\nexport class Hsva {\r\n\r\n  public onChange:EventEmitter<Hsva> = new EventEmitter<Hsva>(true);\r\n\r\n  constructor(public h: number, public s: number, public v: number, public a: number) {\r\n    \r\n  }\r\n\r\n  public onColorChange(value: { s: number, v: number, rgX: number, rgY: number }): void {\r\n    this.s = value.s / value.rgX;\r\n    this.v = value.v / value.rgY;\r\n  }\r\n\r\n  public onHueChange(value: { v: number, rgX: number }): void {\r\n    this.h = value.v / value.rgX;\r\n    // this.sliderH = this.hsva.h;\r\n  }\r\n\r\n  public onValueChange(value: { v: number, rgX: number }): void {\r\n    this.v = value.v / value.rgX;\r\n  }\r\n\r\n  public onAlphaChange(value: { v: number, rgX: number }): void {\r\n    this.a = value.v / value.rgX;\r\n  }\r\n\r\n}\r\n\r\nexport class Hsla {\r\n  constructor(public h: number, public s: number, public l: number, public a: number) {}\r\n  \r\n  public denormalize():Hsla{\r\n    this.h = Math.round(this.h * 360);\r\n    this.s = Math.round(this.s * 100);\r\n    this.l = Math.round(this.l * 100);\r\n    return this;\r\n  }\r\n  public toString():string{\r\n    let output =  \r\n    'hsl' + \r\n    (this.a != 1 ? 'a(': '(') +\r\n    this.h + ', ' +\r\n    this.s + '%, ' +\r\n    this.l + '%' + \r\n    (this.a != 1 ? ', ' + this.a.toPrecision(2) + ')' : ')')\r\n    return output;\r\n  }\r\n\r\n}\r\n\r\nexport class Cmyk {\r\n  constructor(public c: number, public m: number, public y: number, public k: number, public a: number = 1) {}\r\n\r\n  public denormalize():Cmyk{\r\n    this.c = Math.round(this.c * 100);\r\n    this.m = Math.round(this.m * 100);\r\n    this.y = Math.round(this.y * 100);\r\n    this.k = Math.round(this.k * 100);\r\n    return this;\r\n  }\r\n  public toString():string {\r\n    this.denormalize();\r\n    let output =  \r\n    'cmyk(' + \r\n    this.c + ', ' +\r\n    this.m + ', ' +\r\n    this.y + ', ' + \r\n    this.k + ')';\r\n    return output;\r\n  }\r\n}\r\n","export class NgxColorsColor {\r\n  preview: string;\r\n  variants: Array<string>;\r\n  constructor(params?) {\r\n    if (params) {\r\n      this.preview = params.preview;\r\n      this.variants = params.variants;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\n\r\nimport { Cmyk, Rgba, Hsla, Hsva } from \"../clases/formats\";\r\n\r\nimport { ColorPickerComponent } from \"../components/color-picker/color-picker.component\";\r\nimport { ColorFormats } from \"../enums/formats\";\r\n\r\n@Injectable()\r\nexport class ConverterService {\r\n  // private active: ColorPickerComponent | null = null;\r\n\r\n  constructor() {}\r\n\r\n  // public setActive(active: ColorPickerComponent | null): void {\r\n  //   this.active = active;\r\n  // }\r\n\r\n  toFormat(hsva: Hsva, format: ColorFormats) {\r\n    var output = \"\";\r\n    if (hsva) {\r\n      switch (format) {\r\n        case ColorFormats.HEX:\r\n          var rgba: Rgba = this.hsvaToRgba(hsva);\r\n          rgba.denormalize();\r\n          var output = this.rgbaToHex(rgba, true);\r\n          break;\r\n        case ColorFormats.HSLA:\r\n          var hsla: Hsla = this.hsva2hsla(hsva);\r\n          hsla.denormalize();\r\n          var output = hsla.toString();\r\n          break;\r\n        case ColorFormats.RGBA:\r\n          var rgba: Rgba = this.hsvaToRgba(hsva);\r\n          var output = rgba.toString();\r\n          break;\r\n        case ColorFormats.CMYK:\r\n          var cmyk: Cmyk = this.hsvaToCmyk(hsva);\r\n          var output = cmyk.toString();\r\n          break;\r\n      }\r\n    }\r\n    return output;\r\n  }\r\n\r\n  public stringToFormat(color: string, format: ColorFormats) {\r\n    var hsva = this.stringToHsva(color, true);\r\n    return this.toFormat(hsva, format);\r\n  }\r\n\r\n  public hsva2hsla(hsva: Hsva): Hsla {\r\n    const h = hsva.h,\r\n      s = hsva.s,\r\n      v = hsva.v,\r\n      a = hsva.a;\r\n\r\n    if (v === 0) {\r\n      return new Hsla(h, 0, 0, a);\r\n    } else if (s === 0 && v === 1) {\r\n      return new Hsla(h, 1, 1, a);\r\n    } else {\r\n      const l = (v * (2 - s)) / 2;\r\n\r\n      return new Hsla(h, (v * s) / (1 - Math.abs(2 * l - 1)), l, a);\r\n    }\r\n  }\r\n\r\n  public hsla2hsva(hsla: Hsla): Hsva {\r\n    const h = Math.min(hsla.h, 1),\r\n      s = Math.min(hsla.s, 1);\r\n    const l = Math.min(hsla.l, 1),\r\n      a = Math.min(hsla.a, 1);\r\n\r\n    if (l === 0) {\r\n      return new Hsva(h, 0, 0, a);\r\n    } else {\r\n      const v = l + (s * (1 - Math.abs(2 * l - 1))) / 2;\r\n\r\n      return new Hsva(h, (2 * (v - l)) / v, v, a);\r\n    }\r\n  }\r\n\r\n  public hsvaToRgba(hsva: Hsva): Rgba {\r\n    let r: number, g: number, b: number;\r\n\r\n    const h = hsva.h,\r\n      s = hsva.s,\r\n      v = hsva.v,\r\n      a = hsva.a;\r\n\r\n    const i = Math.floor(h * 6);\r\n    const f = h * 6 - i;\r\n    const p = v * (1 - s);\r\n    const q = v * (1 - f * s);\r\n    const t = v * (1 - (1 - f) * s);\r\n\r\n    switch (i % 6) {\r\n      case 0:\r\n        (r = v), (g = t), (b = p);\r\n        break;\r\n      case 1:\r\n        (r = q), (g = v), (b = p);\r\n        break;\r\n      case 2:\r\n        (r = p), (g = v), (b = t);\r\n        break;\r\n      case 3:\r\n        (r = p), (g = q), (b = v);\r\n        break;\r\n      case 4:\r\n        (r = t), (g = p), (b = v);\r\n        break;\r\n      case 5:\r\n        (r = v), (g = p), (b = q);\r\n        break;\r\n      default:\r\n        (r = 0), (g = 0), (b = 0);\r\n    }\r\n\r\n    return new Rgba(r, g, b, a);\r\n  }\r\n\r\n  public cmykToRgb(cmyk: Cmyk): Rgba {\r\n    const r = (1 - cmyk.c) * (1 - cmyk.k);\r\n    const g = (1 - cmyk.m) * (1 - cmyk.k);\r\n    const b = (1 - cmyk.y) * (1 - cmyk.k);\r\n\r\n    return new Rgba(r, g, b, cmyk.a);\r\n  }\r\n\r\n  public rgbaToCmyk(rgba: Rgba): Cmyk {\r\n    const k: number = 1 - Math.max(rgba.r, rgba.g, rgba.b);\r\n\r\n    if (k === 1) {\r\n      return new Cmyk(0, 0, 0, 1, rgba.a);\r\n    } else {\r\n      const c = (1 - rgba.r - k) / (1 - k);\r\n      const m = (1 - rgba.g - k) / (1 - k);\r\n      const y = (1 - rgba.b - k) / (1 - k);\r\n\r\n      return new Cmyk(c, m, y, k, rgba.a);\r\n    }\r\n  }\r\n\r\n  public hsvaToCmyk(hsva: Hsva): Cmyk {\r\n    let rgba = this.hsvaToRgba(hsva);\r\n    let cmyk = this.rgbaToCmyk(rgba);\r\n    \r\n    return cmyk;\r\n}\r\n\r\n  public rgbaToHsva(rgba: Rgba): Hsva {\r\n    let h: number, s: number;\r\n\r\n    const r = Math.min(rgba.r, 1),\r\n      g = Math.min(rgba.g, 1);\r\n    const b = Math.min(rgba.b, 1),\r\n      a = Math.min(rgba.a, 1);\r\n\r\n    const max = Math.max(r, g, b),\r\n      min = Math.min(r, g, b);\r\n\r\n    const v: number = max,\r\n      d = max - min;\r\n\r\n    s = max === 0 ? 0 : d / max;\r\n\r\n    if (max === min) {\r\n      h = 0;\r\n    } else {\r\n      switch (max) {\r\n        case r:\r\n          h = (g - b) / d + (g < b ? 6 : 0);\r\n          break;\r\n        case g:\r\n          h = (b - r) / d + 2;\r\n          break;\r\n        case b:\r\n          h = (r - g) / d + 4;\r\n          break;\r\n        default:\r\n          h = 0;\r\n      }\r\n\r\n      h /= 6;\r\n    }\r\n\r\n    return new Hsva(h, s, v, a);\r\n  }\r\n\r\n  public rgbaToHex(rgba: Rgba, allowHex8?: boolean): string {\r\n    /* tslint:disable:no-bitwise */\r\n    let hex =\r\n      \"#\" +\r\n      ((1 << 24) | (rgba.r << 16) | (rgba.g << 8) | rgba.b)\r\n        .toString(16)\r\n        .substr(1);\r\n\r\n    if (rgba.a != 1) {\r\n      hex += ((1 << 8) | Math.round(rgba.a * 255)).toString(16).substr(1);\r\n    }\r\n    /* tslint:enable:no-bitwise */\r\n\r\n    return hex;\r\n  }\r\n\r\n  public normalizeCMYK(cmyk: Cmyk): Cmyk {\r\n    return new Cmyk(\r\n      cmyk.c / 100,\r\n      cmyk.m / 100,\r\n      cmyk.y / 100,\r\n      cmyk.k / 100,\r\n      cmyk.a\r\n    );\r\n  }\r\n\r\n  public denormalizeCMYK(cmyk: Cmyk): Cmyk {\r\n    return new Cmyk(\r\n      Math.floor(cmyk.c * 100),\r\n      Math.floor(cmyk.m * 100),\r\n      Math.floor(cmyk.y * 100),\r\n      Math.floor(cmyk.k * 100),\r\n      cmyk.a\r\n    );\r\n  }\r\n\r\n  public denormalizeRGBA(rgba: Rgba): Rgba {\r\n    return new Rgba(\r\n      Math.round(rgba.r * 255),\r\n      Math.round(rgba.g * 255),\r\n      Math.round(rgba.b * 255),\r\n      rgba.a\r\n    );\r\n  }\r\n\r\n  public stringToHsva(\r\n    colorString: string = \"\",\r\n    allowHex8: boolean = true\r\n  ): Hsva | null {\r\n    let hsva: Hsva | null = null;\r\n\r\n    colorString = (colorString || \"\").toLowerCase();\r\n\r\n    const stringParsers = [\r\n      {\r\n        re: /(rgb)a?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*%?,\\s*(\\d{1,3})\\s*%?(?:,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)/,\r\n        parse: function (execResult: any) {\r\n          return new Rgba(\r\n            parseInt(execResult[2], 10) / 255,\r\n            parseInt(execResult[3], 10) / 255,\r\n            parseInt(execResult[4], 10) / 255,\r\n            isNaN(parseFloat(execResult[5])) ? 1 : parseFloat(execResult[5])\r\n          );\r\n        },\r\n      },\r\n      {\r\n        re: /(hsl)a?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})%\\s*,\\s*(\\d{1,3})%\\s*(?:,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)/,\r\n        parse: function (execResult: any) {\r\n          return new Hsla(\r\n            parseInt(execResult[2], 10) / 360,\r\n            parseInt(execResult[3], 10) / 100,\r\n            parseInt(execResult[4], 10) / 100,\r\n            isNaN(parseFloat(execResult[5])) ? 1 : parseFloat(execResult[5])\r\n          );\r\n        },\r\n      },\r\n      {\r\n        re: /cmyk?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*%?,\\s*(\\d{1,3})\\s*%?(?:,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)/,\r\n        parse: function (execResult: any) {\r\n          return new Cmyk(\r\n            parseInt(execResult[1], 10) / 100,\r\n            parseInt(execResult[2], 10) / 100,\r\n            parseInt(execResult[3], 10) / 100,\r\n            parseInt(execResult[4], 10) / 100\r\n          );\r\n        },\r\n      },\r\n    ];\r\n\r\n    if (allowHex8) {\r\n      stringParsers.push({\r\n        re: /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})?$/,\r\n        parse: function (execResult: any) {\r\n          return new Rgba(\r\n            parseInt(execResult[1], 16) / 255,\r\n            parseInt(execResult[2], 16) / 255,\r\n            parseInt(execResult[3], 16) / 255,\r\n            parseInt(execResult[4] || \"FF\", 16) / 255\r\n          );\r\n        },\r\n      });\r\n    } else {\r\n      stringParsers.push({\r\n        re: /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})$/,\r\n        parse: function (execResult: any) {\r\n          return new Rgba(\r\n            parseInt(execResult[1], 16) / 255,\r\n            parseInt(execResult[2], 16) / 255,\r\n            parseInt(execResult[3], 16) / 255,\r\n            1\r\n          );\r\n        },\r\n      });\r\n    }\r\n\r\n    stringParsers.push({\r\n      re: /#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])$/,\r\n      parse: function (execResult: any) {\r\n        return new Rgba(\r\n          parseInt(execResult[1] + execResult[1], 16) / 255,\r\n          parseInt(execResult[2] + execResult[2], 16) / 255,\r\n          parseInt(execResult[3] + execResult[3], 16) / 255,\r\n          1\r\n        );\r\n      },\r\n    });\r\n\r\n    for (const key in stringParsers) {\r\n      if (stringParsers.hasOwnProperty(key)) {\r\n        const parser = stringParsers[key];\r\n\r\n        const match = parser.re.exec(colorString),\r\n          color: any = match && parser.parse(match);\r\n\r\n        if (color) {\r\n          if (color instanceof Rgba) {\r\n            hsva = this.rgbaToHsva(color);\r\n          } else if (color instanceof Hsla) {\r\n            hsva = this.hsla2hsva(color);\r\n          } else if (color instanceof Cmyk) {\r\n            let rgb = this.cmykToRgb(color);\r\n            hsva = this.rgbaToHsva(rgb);\r\n          }\r\n\r\n          return hsva;\r\n        }\r\n      }\r\n    }\r\n\r\n    return hsva;\r\n  }\r\n\r\n  public outputFormat(hsva: Hsva): string {\r\n    return this.hsvaToRgba(hsva).toString();\r\n  }\r\n\r\n  public getFormatByString(color: string): string {\r\n    if (color) {\r\n      color = color.toLowerCase();\r\n      let regexHex: RegExp = /(#([\\da-f]{3}(?:[\\da-f]{3})?(?:[\\da-f]{2})?))/;\r\n      let regexRGBA: RegExp =\r\n        /(rgba\\((\\d{1,3},\\s?){3}(1|0?\\.\\d+)\\)|rgb\\(\\d{1,3}(,\\s?\\d{1,3}){2}\\))/;\r\n      let regexHSLA: RegExp =\r\n        /(hsla\\((\\d{1,3}%?,\\s?){3}(1|0?\\.\\d+)\\)|hsl\\(\\d{1,3}%?(,\\s?\\d{1,3}%?){2}\\))/;\r\n      let regexCMYK: RegExp =\r\n        /(cmyk\\(\\d{1,3}(,\\s?\\d{1,3}){3}\\))/;\r\n      if (regexHex.test(color)) {\r\n        return \"hex\";\r\n      } else if (regexRGBA.test(color)) {\r\n        return \"rgba\";\r\n      } else if (regexHSLA.test(color)) {\r\n        return \"hsla\";\r\n      } else if (regexCMYK.test(color)) {\r\n        return \"cmyk\";\r\n      }\r\n    }\r\n    return \"hex\";\r\n  }\r\n}\r\n","export class SliderPosition {\r\n    constructor(public h: number, public s: number, public v: number, public a: number) {}\r\n}\r\n  \r\nexport class SliderDimension {\r\n    constructor(public h: number, public s: number, public v: number, public a: number) {}\r\n}","import { Input, Directive, Output, EventEmitter, HostListener, ElementRef } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[slider]'\r\n  })\r\n  export class SliderDirective {\r\n    private listenerMove: any;\r\n    private listenerStop: any;\r\n  \r\n    @Input() rgX: number;\r\n    @Input() rgY: number;\r\n  \r\n    @Input() slider: string;\r\n  \r\n    @Output() dragEnd = new EventEmitter();\r\n    @Output() dragStart = new EventEmitter();\r\n  \r\n    @Output() newValue = new EventEmitter<any>();\r\n  \r\n    @HostListener('mousedown', ['$event']) mouseDown(event: any): void {\r\n      this.start(event);\r\n    }\r\n  \r\n    @HostListener('touchstart', ['$event']) touchStart(event: any): void {\r\n      this.start(event);\r\n    }\r\n  \r\n    constructor(private elRef: ElementRef) {\r\n      this.listenerMove = (event: any) => this.move(event);\r\n  \r\n      this.listenerStop = () => this.stop();\r\n    }\r\n  \r\n    private move(event: any): void {\r\n      event.preventDefault();\r\n  \r\n      this.setCursor(event);\r\n    }\r\n  \r\n    private start(event: any): void {\r\n      this.setCursor(event);\r\n  \r\n      event.stopPropagation();\r\n  \r\n      document.addEventListener('mouseup', this.listenerStop);\r\n      document.addEventListener('touchend', this.listenerStop);\r\n      document.addEventListener('mousemove', this.listenerMove);\r\n      document.addEventListener('touchmove', this.listenerMove);\r\n  \r\n      this.dragStart.emit();\r\n    }\r\n  \r\n    private stop(): void {\r\n      document.removeEventListener('mouseup', this.listenerStop);\r\n      document.removeEventListener('touchend', this.listenerStop);\r\n      document.removeEventListener('mousemove', this.listenerMove);\r\n      document.removeEventListener('touchmove', this.listenerMove);\r\n  \r\n      this.dragEnd.emit();\r\n    }\r\n  \r\n    private getX(event: any): number {\r\n      const position = this.elRef.nativeElement.getBoundingClientRect();\r\n  \r\n      const pageX = (event.pageX !== undefined) ? event.pageX : event.touches[0].pageX;\r\n  \r\n      return pageX - position.left - window.pageXOffset;\r\n    }\r\n  \r\n    private getY(event: any): number {\r\n      const position = this.elRef.nativeElement.getBoundingClientRect();\r\n  \r\n      const pageY = (event.pageY !== undefined) ? event.pageY : event.touches[0].pageY;\r\n  \r\n      return pageY - position.top - window.pageYOffset;\r\n    }\r\n  \r\n    private setCursor(event: any): void {\r\n      const width = this.elRef.nativeElement.offsetWidth;\r\n      const height = this.elRef.nativeElement.offsetHeight;\r\n  \r\n      const x = Math.max(0, Math.min(this.getX(event), width));\r\n      const y = Math.max(0, Math.min(this.getY(event), height));\r\n  \r\n      if (this.rgX !== undefined && this.rgY !== undefined) {\r\n        this.newValue.emit({ s: x / width, v: (1 - y / height), rgX: this.rgX, rgY: this.rgY });\r\n      } else if (this.rgX === undefined && this.rgY !== undefined) {\r\n        this.newValue.emit({ v: y / height, rgY: this.rgY });\r\n      } else if (this.rgX !== undefined && this.rgY === undefined) {\r\n        this.newValue.emit({ v: x / width, rgX: this.rgX });\r\n      }\r\n    }\r\n  }","<div #dialogPopup class=\"color-picker\" (click)=\"$event.stopPropagation()\">\r\n  <div\r\n    class=\"saturation-lightness\"\r\n    *ngIf=\"this.controls != 'only-alpha'\"\r\n    [slider]\r\n    [rgX]=\"1\"\r\n    [rgY]=\"1\"\r\n    [style.background-color]=\"hueSliderColor\"\r\n    (newValue)=\"onSliderChange('saturation-lightness', $event)\"\r\n  >\r\n    <div class=\"cursor\" [style.top.px]=\"slider?.v\" [style.left.px]=\"slider?.s\">\r\n      <div></div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"hue-alpha box\">\r\n    <div class=\"left\" *ngIf=\"this.controls != 'only-alpha'\">\r\n      <div class=\"selected-color-background\"></div>\r\n      <div\r\n        class=\"selected-color\"\r\n        [style.background-color]=\"selectedColor\"\r\n      ></div>\r\n    </div>\r\n\r\n    <div class=\"right\">\r\n      <div\r\n        *ngIf=\"this.controls != 'only-alpha'\"\r\n        #hueSlider\r\n        class=\"hue\"\r\n        [slider]\r\n        [rgX]=\"1\"\r\n        (newValue)=\"onSliderChange('hue', $event)\"\r\n      >\r\n        <div class=\"sliderCursor\" [style.left.px]=\"slider?.h\">\r\n          <div><div></div></div>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        *ngIf=\"this.controls != 'no-alpha'\"\r\n        #alphaSlider\r\n        class=\"alpha\"\r\n        [slider]\r\n        [rgX]=\"1\"\r\n        (newValue)=\"onSliderChange('alpha', $event)\"\r\n      >\r\n        <div\r\n          class=\"alpha-gradient\"\r\n          [ngStyle]=\"getBackgroundColor(alphaSliderColor)\"\r\n        ></div>\r\n        <div class=\"sliderCursor\" [style.left.px]=\"slider?.a\">\r\n          <div><div></div></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  OnDestroy,\r\n  AfterViewInit,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n  ElementRef,\r\n  ChangeDetectorRef,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n} from \"@angular/core\";\r\n\r\nimport { Cmyk, Hsla, Hsva, Rgba } from \"../../clases/formats\";\r\nimport { ColorFormats } from \"../../enums/formats\";\r\nimport { SliderDimension, SliderPosition } from \"../../clases/slider\";\r\n\r\nimport { ConverterService } from \"../../services/converter.service\";\r\n\r\n@Component({\r\n  selector: \"color-picker\",\r\n  templateUrl: \"./color-picker.component.html\",\r\n  styleUrls: [\"./color-picker.component.scss\"],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ColorPickerComponent\r\n  implements OnInit, OnDestroy, AfterViewInit, OnChanges\r\n{\r\n  //IO color\r\n  @Input() color: Hsva = new Hsva(0, 1, 1, 1);\r\n  @Input() controls: \"default\" | \"only-alpha\" | \"no-alpha\" = \"default\";\r\n  @Output() sliderChange: EventEmitter<Hsva> = new EventEmitter<Hsva>(false);\r\n  @Output() onAlphaChange: EventEmitter<any> = new EventEmitter<any>(false);\r\n  //Event triggered when any slider change\r\n  // @Output() colorSelectedChange:EventEmitter<Hsva> = new EventEmitter<Hsva>(false);\r\n\r\n  private hsva: Hsva = new Hsva(0, 1, 1, 1);\r\n  private outputColor: Hsva;\r\n  public selectedColor: string = \"#000000\";\r\n  private fallbackColor: string = \"#000000\";\r\n\r\n  // private sHue: number;\r\n  private sliderDimMax: SliderDimension;\r\n  public slider: SliderPosition;\r\n\r\n  public hueSliderColor: string;\r\n  public alphaSliderColor: string;\r\n\r\n  @ViewChild(\"hueSlider\", { static: false }) hueSlider: ElementRef;\r\n  @ViewChild(\"alphaSlider\", { static: false }) alphaSlider: ElementRef;\r\n\r\n  constructor(\r\n    private service: ConverterService,\r\n    private cdr: ChangeDetectorRef\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    if (!this.color) {\r\n      this.color = new Hsva(0, 1, 1, 1);\r\n    }\r\n    this.slider = new SliderPosition(0, 0, 0, 0);\r\n    this.update();\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n\r\n  ngOnChanges(changes: any): void {\r\n    if (changes.color && this.color) {\r\n      this.update();\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    const hueWidth = this.hueSlider?.nativeElement.offsetWidth || 140;\r\n    const alphaWidth = this.alphaSlider?.nativeElement.offsetWidth || 140;\r\n    this.sliderDimMax = new SliderDimension(hueWidth, 220, 130, alphaWidth);\r\n    this.update();\r\n  }\r\n\r\n  public onSliderChange(type: string, event) {\r\n    switch (type) {\r\n      case \"saturation-lightness\":\r\n        this.hsva.onColorChange(event);\r\n        break;\r\n      case \"hue\":\r\n        this.hsva.onHueChange(event);\r\n        break;\r\n      case \"alpha\":\r\n        this.hsva.onAlphaChange(event);\r\n        this.onAlphaChange.emit(event);\r\n        break;\r\n      case \"value\":\r\n        this.hsva.onValueChange(event);\r\n        break;\r\n    }\r\n    // this.sHue = this.hsva.h;\r\n    this.update();\r\n    this.setColor(this.outputColor);\r\n  }\r\n\r\n  setColor(color) {\r\n    this.color = color;\r\n    this.sliderChange.emit(this.color);\r\n  }\r\n\r\n  public getBackgroundColor(color) {\r\n    return {\r\n      background:\r\n        \"linear-gradient(90deg, rgba(36,0,0,0) 0%, \" + color + \" 100%)\",\r\n    };\r\n  }\r\n\r\n  private update(): void {\r\n    this.hsva = this.color;\r\n    if (this.sliderDimMax) {\r\n      let rgba = this.service.hsvaToRgba(this.hsva).denormalize();\r\n      let hue = this.service\r\n        .hsvaToRgba(new Hsva(this.hsva.h, 1, 1, 1))\r\n        .denormalize();\r\n\r\n      this.hueSliderColor = \"rgb(\" + hue.r + \",\" + hue.g + \",\" + hue.b + \")\";\r\n      this.alphaSliderColor =\r\n        \"rgb(\" + rgba.r + \",\" + rgba.g + \",\" + rgba.b + \")\";\r\n\r\n      this.outputColor = this.hsva;\r\n      this.selectedColor = this.service.hsvaToRgba(this.hsva).toString();\r\n\r\n      this.slider = new SliderPosition(\r\n        // (this.sHue || this.hsva.h) * this.sliderDimMax.h - 8,\r\n        this.hsva.h * this.sliderDimMax.h - 5,\r\n        this.hsva.s * this.sliderDimMax.s - 8,\r\n        (1 - this.hsva.v) * this.sliderDimMax.v - 8,\r\n        this.hsva.a * this.sliderDimMax.a - 5\r\n      );\r\n      this.cdr.detectChanges();\r\n    }\r\n  }\r\n}\r\n","<div class=\"opened\" [style]=\"positionString\" #dialog>\r\n  <ng-container *ngIf=\"menu == 1\">\r\n    <div class=\"colors\" [@colorsAnimation]=\"colorsAnimationEffect\">\r\n      <ng-container *ngFor=\"let color of palette; let i = index\">\r\n        <div class=\"circle wrapper color\">\r\n          <div\r\n            (click)=\"onColorClick(color)\"\r\n            class=\"circle color circle-border\"\r\n            [class.colornull]=\"!color\"\r\n            [ngStyle]=\"getBackgroundColor(color)\"\r\n          >\r\n            <div *ngIf=\"i == this.indexSeleccionado\" class=\"selected\"></div>\r\n          </div>\r\n        </div>\r\n      </ng-container>\r\n      <div\r\n        style=\"background: rgb(245 245 245); position: relative\"\r\n        (click)=\"addColor()\"\r\n        *ngIf=\"!hideColorPicker && this.colorPickerControls != 'only-alpha'\"\r\n        class=\"circle button\"\r\n      >\r\n        <div\r\n          *ngIf=\"this.indexSeleccionado === undefined\"\r\n          style=\"\r\n            position: absolute;\r\n            height: 7px;\r\n            width: 7px;\r\n            border: 1px solid rgba(0, 0, 0, 0.03);\r\n            border-radius: 100%;\r\n            top: 0;\r\n            right: 0;\r\n          \"\r\n          [ngStyle]=\"getBackgroundColor(color)\"\r\n        ></div>\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          height=\"24px\"\r\n          viewBox=\"0 0 24 24\"\r\n          width=\"24px\"\r\n          fill=\"#222222\"\r\n        >\r\n          <path d=\"M24 24H0V0h24v24z\" fill=\"none\" opacity=\".87\" />\r\n          <path d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6-1.41-1.41z\" />\r\n        </svg>\r\n        <!-- <div class=\"add\">\r\n          <icons icon=\"add\"></icons>\r\n        </div> -->\r\n      </div>\r\n      <color-picker\r\n        *ngIf=\"!hideColorPicker && this.colorPickerControls == 'only-alpha'\"\r\n        [controls]=\"colorPickerControls\"\r\n        [color]=\"hsva\"\r\n        (colorChange)=\"onChangeColorPicker($event)\"\r\n        (onAlphaChange)=\"onAlphaChange($event)\"\r\n      ></color-picker>\r\n    </div>\r\n  </ng-container>\r\n  <ng-container *ngIf=\"menu == 2\">\r\n    <div class=\"colors\" [@colorsAnimation]=\"colorsAnimationEffect\">\r\n      <div class=\"circle wrapper\">\r\n        <div (click)=\"onClickBack()\" class=\"add\">\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            viewBox=\"0 0 24 24\"\r\n          >\r\n            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n            <path\r\n              d=\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\r\n            />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n\r\n      <ng-container *ngFor=\"let variant of variants\">\r\n        <div class=\"circle wrapper color\">\r\n          <div\r\n            [class.colornull]=\"!variant\"\r\n            (click)=\"changeColor(variant)\"\r\n            class=\"circle circle-border\"\r\n            [ngStyle]=\"{ background: variant }\"\r\n          >\r\n            <div *ngIf=\"isSelected(variant)\" class=\"selected\"></div>\r\n          </div>\r\n        </div>\r\n      </ng-container>\r\n    </div>\r\n  </ng-container>\r\n  <ng-container *ngIf=\"menu == 3\">\r\n    <div class=\"nav-wrapper\">\r\n      <div\r\n        (click)=\"onClickBack()\"\r\n        class=\"round-button button\"\r\n        style=\"float: left\"\r\n      >\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"24\"\r\n          height=\"24\"\r\n          viewBox=\"0 0 24 24\"\r\n        >\r\n          <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n          <path\r\n            d=\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\r\n          />\r\n        </svg>\r\n      </div>\r\n      <button (click)=\"emitClose('cancel')\" style=\"float: right\">\r\n        {{ cancelLabel }}\r\n      </button>\r\n      <button (click)=\"emitClose('accept')\" style=\"float: right\">\r\n        {{ acceptLabel }}\r\n      </button>\r\n    </div>\r\n    <div class=\"color-picker-wrapper\">\r\n      <!-- <span [(colorPicker)]=\"color\"></span> -->\r\n      <color-picker\r\n        [controls]=\"colorPickerControls\"\r\n        [color]=\"hsva\"\r\n        (sliderChange)=\"onChangeColorPicker($event)\"\r\n      ></color-picker>\r\n    </div>\r\n  </ng-container>\r\n  <div class=\"manual-input-wrapper\" *ngIf=\"!hideTextInput\">\r\n    <p (click)=\"nextFormat()\" style=\"cursor: pointer;\">{{ colorFormats[format] }}</p>\r\n    <div class=\"g-input\">\r\n      <input\r\n        [placeholder]=\"placeholder\"\r\n        type=\"text\"\r\n        [value]=\"color\"\r\n        [style.font-size.px]=\"color && color.length > 23 ? 9 : 10\"\r\n        [style.letter-spacing.px]=\"color && color.length > 16 ? 0 : 1.5\"\r\n        (keyup)=\"changeColorManual(paintInput.value)\"\r\n        (keydown.enter)=\"emitClose('accept')\"\r\n        #paintInput\r\n      />\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectorRef,\r\n  ViewChild,\r\n  ElementRef,\r\n  HostListener,\r\n  HostBinding,\r\n} from '@angular/core';\r\nimport {\r\n  trigger,\r\n  transition,\r\n  query,\r\n  style,\r\n  stagger,\r\n  animate,\r\n  keyframes,\r\n} from '@angular/animations';\r\nimport { isDescendantOrSame } from '../../helpers/helpers';\r\nimport { ColorFormats } from '../../enums/formats';\r\nimport { ConverterService } from '../../services/converter.service';\r\nimport { defaultColors } from '../../helpers/default-colors';\r\nimport { formats } from '../../helpers/formats';\r\nimport { NgxColorsTriggerDirective } from '../../directives/ngx-colors-trigger.directive';\r\nimport { Hsva } from '../../clases/formats';\r\nimport { NgxColorsColor } from '../../clases/color';\r\n\r\n@Component({\r\n  selector: 'ngx-colors-panel',\r\n  templateUrl: './panel.component.html',\r\n  styleUrls: ['./panel.component.scss'],\r\n  animations: [\r\n    trigger('colorsAnimation', [\r\n      transition('void => slide-in', [\r\n        // Initially all colors are hidden\r\n        query(':enter', style({ opacity: 0 }), { optional: true }),\r\n        //slide-in animation\r\n        query(\r\n          ':enter',\r\n          stagger('10ms', [\r\n            animate(\r\n              '.3s ease-in',\r\n              keyframes([\r\n                style({ opacity: 0, transform: 'translatex(-50%)', offset: 0 }),\r\n                style({\r\n                  opacity: 0.5,\r\n                  transform: 'translatex(-10px) scale(1.1)',\r\n                  offset: 0.3,\r\n                }),\r\n                style({ opacity: 1, transform: 'translatex(0)', offset: 1 }),\r\n              ])\r\n            ),\r\n          ]),\r\n          { optional: true }\r\n        ),\r\n      ]),\r\n      //popup animation\r\n      transition('void => popup', [\r\n        query(':enter', style({ opacity: 0, transform: 'scale(0)' }), {\r\n          optional: true,\r\n        }),\r\n        query(\r\n          ':enter',\r\n          stagger('10ms', [\r\n            animate(\r\n              '500ms ease-out',\r\n              keyframes([\r\n                style({ opacity: 0.5, transform: 'scale(.5)', offset: 0.3 }),\r\n                style({ opacity: 1, transform: 'scale(1.1)', offset: 0.8 }),\r\n                style({ opacity: 1, transform: 'scale(1)', offset: 1 }),\r\n              ])\r\n            ),\r\n          ]),\r\n          { optional: true }\r\n        ),\r\n      ]),\r\n    ]),\r\n  ],\r\n})\r\nexport class PanelComponent implements OnInit {\r\n  @HostListener('document:mousedown', ['$event'])\r\n  click(event) {\r\n    if (this.isOutside(event)) {\r\n      this.emitClose('cancel');\r\n    }\r\n  }\r\n\r\n  @HostListener('document:scroll')\r\n  onScroll() {\r\n    this.onScreenMovement();\r\n  }\r\n  @HostListener('window:resize')\r\n  onResize() {\r\n    this.onScreenMovement();\r\n  }\r\n\r\n  @HostBinding('style.top.px') public top: number;\r\n  @HostBinding('style.left.px') public left: number;\r\n  @ViewChild('dialog') panelRef: ElementRef;\r\n  constructor(\r\n    public service: ConverterService,\r\n    private cdr: ChangeDetectorRef\r\n  ) {}\r\n\r\n  public color = '#000000';\r\n  public previewColor: string = '#000000';\r\n  public hsva = new Hsva(0, 1, 1, 1);\r\n\r\n  public colorsAnimationEffect = 'slide-in';\r\n\r\n  public palette = defaultColors;\r\n  public variants = [];\r\n\r\n  public userFormats: string[] = [];\r\n  public colorFormats = formats;\r\n  public format: ColorFormats = ColorFormats.HEX;\r\n  public formatMap = {\r\n    'hex': ColorFormats.HEX,\r\n    'rgba': ColorFormats.RGBA,\r\n    'hsla': ColorFormats.HSLA,\r\n    'cmyk': ColorFormats.CMYK\r\n  }\r\n\r\n  public canChangeFormat: boolean = true;\r\n\r\n  public menu = 1;\r\n\r\n  public hideColorPicker: boolean = false;\r\n  public hideTextInput: boolean = false;\r\n  public acceptLabel: string;\r\n  public cancelLabel: string;\r\n  public colorPickerControls: 'default' | 'only-alpha' | 'no-alpha' = 'default';\r\n  private triggerInstance: NgxColorsTriggerDirective;\r\n  private TriggerBBox;\r\n  public isSelectedColorInPalette: boolean;\r\n  public indexSeleccionado;\r\n  public positionString;\r\n  public temporalColor;\r\n  public backupColor;\r\n  public placeholder = '#FFFFFF';\r\n\r\n  public ngOnInit() {\r\n    this.setPosition();\r\n    this.hsva = this.service.stringToHsva(this.color);\r\n    this.indexSeleccionado = this.findIndexSelectedColor(this.palette);\r\n  }\r\n  public ngAfterViewInit() {\r\n    this.setPositionY();\r\n  }\r\n\r\n  private onScreenMovement() {\r\n    this.setPosition();\r\n    this.setPositionY();\r\n    if (!this.panelRef.nativeElement.style.transition) {\r\n      this.panelRef.nativeElement.style.transition = 'transform 0.5s ease-out';\r\n    }\r\n  }\r\n\r\n  private findIndexSelectedColor(colors): number {\r\n    let resultIndex = undefined;\r\n    if (this.color) {\r\n      for (let i = 0; i < colors.length; i++) {\r\n        const color = colors[i];\r\n        if (typeof color == 'string') {\r\n          if (\r\n            this.service.stringToFormat(this.color, ColorFormats.HEX) ==\r\n            this.service.stringToFormat(color, ColorFormats.HEX)\r\n          ) {\r\n            resultIndex = i;\r\n          }\r\n        } else if (color === undefined) {\r\n          this.color = undefined;\r\n        } else {\r\n          if (this.findIndexSelectedColor(color.variants) != undefined) {\r\n            resultIndex = i;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return resultIndex;\r\n  }\r\n\r\n  public iniciate(\r\n    triggerInstance: NgxColorsTriggerDirective,\r\n    triggerElementRef,\r\n    color,\r\n    palette,\r\n    animation,\r\n    format: string,\r\n    hideTextInput: boolean,\r\n    hideColorPicker: boolean,\r\n    acceptLabel: string,\r\n    cancelLabel: string,\r\n    colorPickerControls: 'default' | 'only-alpha' | 'no-alpha',\r\n    position: 'top' | 'bottom',\r\n    userFormats: string[] = [],\r\n  ) {\r\n    this.colorPickerControls = colorPickerControls;\r\n    this.triggerInstance = triggerInstance;\r\n    this.TriggerBBox = triggerElementRef;\r\n    this.color = color;\r\n    this.hideColorPicker = hideColorPicker;\r\n    this.hideTextInput = hideTextInput;\r\n    this.acceptLabel = acceptLabel;\r\n    this.cancelLabel = cancelLabel;\r\n\r\n    if(userFormats.length) {\r\n      const allFormatsValid = userFormats.every(frt => formats.includes(frt));\r\n      if( allFormatsValid ) {\r\n        this.colorFormats = userFormats;\r\n      }\r\n    }\r\n\r\n    if (format) {\r\n      if (this.colorFormats.includes(format)) {\r\n        this.format = this.colorFormats.indexOf(format.toLowerCase());\r\n        this.canChangeFormat = false;\r\n        if (\r\n          this.service.getFormatByString(this.color) != format.toLowerCase()\r\n        ) {\r\n          this.setColor(this.service.stringToHsva(this.color));\r\n        }\r\n      } else {\r\n        console.error('Format provided is invalid, using HEX');\r\n        this.format = ColorFormats.HEX;\r\n      }\r\n    } else {\r\n      this.format = this.colorFormats.indexOf(this.service.getFormatByString(this.color));\r\n      if( this.format < 0 ) {\r\n        this.format = 0;\r\n      }\r\n    }\r\n\r\n    this.previewColor = this.color;\r\n    this.palette = palette ?? defaultColors;\r\n    this.colorsAnimationEffect = animation;\r\n    if (position == 'top') {\r\n      let TriggerBBox = this.TriggerBBox.nativeElement.getBoundingClientRect();\r\n      this.positionString =\r\n        'transform: translateY(calc( -100% - ' + TriggerBBox.height + 'px ))';\r\n    }\r\n  }\r\n\r\n  public setPosition(): void {\r\n    if (this.TriggerBBox) {\r\n      const panelWidth = 250;\r\n      const viewportOffset =\r\n        this.TriggerBBox.nativeElement.getBoundingClientRect();\r\n      this.top = viewportOffset.top + viewportOffset.height;\r\n      if (viewportOffset.left + panelWidth > window.innerWidth) {\r\n        this.left =\r\n          viewportOffset.right < panelWidth\r\n            ? window.innerWidth / 2 - panelWidth / 2\r\n            : viewportOffset.right - panelWidth;\r\n      } else {\r\n        this.left = viewportOffset.left;\r\n      }\r\n    }\r\n  }\r\n\r\n  private setPositionY(): void {\r\n    const triggerBBox = this.TriggerBBox.nativeElement.getBoundingClientRect();\r\n    const panelBBox = this.panelRef.nativeElement.getBoundingClientRect();\r\n    const panelHeight = panelBBox.height;\r\n    // Check for space below the trigger\r\n    if (triggerBBox.bottom + panelHeight > window.innerHeight) {\r\n      // there is no space, move panel over the trigger\r\n      this.positionString =\r\n        triggerBBox.top < panelBBox.height\r\n          ? 'transform: translateY(-' + triggerBBox.bottom + 'px );'\r\n          : 'transform: translateY(calc( -100% - ' +\r\n            triggerBBox.height +\r\n            'px ));';\r\n    } else {\r\n      this.positionString = '';\r\n    }\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  public hasVariant(color): boolean {\r\n    if (!this.previewColor) {\r\n      return false;\r\n    }\r\n    return (\r\n      typeof color != 'string' &&\r\n      color.variants.some(\r\n        (v) => v.toUpperCase() == this.previewColor.toUpperCase()\r\n      )\r\n    );\r\n  }\r\n\r\n  public isSelected(color) {\r\n    if (!this.previewColor) {\r\n      return false;\r\n    }\r\n    return (\r\n      typeof color == 'string' &&\r\n      color.toUpperCase() == this.previewColor.toUpperCase()\r\n    );\r\n  }\r\n\r\n  public getBackgroundColor(color) {\r\n    if (typeof color == 'string') {\r\n      return { background: color };\r\n    } else {\r\n      return { background: color?.preview };\r\n    }\r\n  }\r\n\r\n  public onAlphaChange(event) {\r\n    this.palette = this.ChangeAlphaOnPalette(event, this.palette);\r\n  }\r\n\r\n  private ChangeAlphaOnPalette(\r\n    alpha,\r\n    colors: Array<string | NgxColorsColor>\r\n  ): Array<any> {\r\n    var result = [];\r\n    for (let i = 0; i < colors.length; i++) {\r\n      const color = colors[i];\r\n      if (typeof color == 'string') {\r\n        let newColor = this.service.stringToHsva(color);\r\n        newColor.onAlphaChange(alpha);\r\n        result.push(this.service.toFormat(newColor, this.format));\r\n      } else {\r\n        let newColor = new NgxColorsColor();\r\n        let newColorPreview = this.service.stringToHsva(color.preview);\r\n        newColorPreview.onAlphaChange(alpha);\r\n        newColor.preview = this.service.toFormat(newColorPreview, this.format);\r\n        newColor.variants = this.ChangeAlphaOnPalette(alpha, color.variants);\r\n        result.push(newColor);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Change color from default colors\r\n   * @param string color\r\n   */\r\n  public changeColor(color: string): void {\r\n    this.setColor(this.service.stringToHsva(color));\r\n    // this.triggerInstance.onChange();\r\n    this.emitClose('accept');\r\n  }\r\n\r\n  public onChangeColorPicker(event: Hsva) {\r\n    this.temporalColor = event;\r\n    this.color = this.service.toFormat(event, this.format);\r\n    // this.setColor(event);\r\n    this.triggerInstance.sliderChange(\r\n      this.service.toFormat(event, this.format)\r\n    );\r\n  }\r\n\r\n  public changeColorManual(color: string): void {\r\n    this.previewColor = color;\r\n    this.color = color;\r\n    this.hsva = this.service.stringToHsva(color);\r\n    this.setPreviewColor(this.hsva);\r\n    this.temporalColor = this.hsva;\r\n    this.triggerInstance.setColor(this.color, this.previewColor);\r\n    // this.triggerInstance.onChange();\r\n  }\r\n\r\n  setColor(value: Hsva, colorIndex: number = -1) {\r\n    this.hsva = value;\r\n\r\n    let formatName = this.colorFormats[this.format];\r\n    let index = colorIndex\r\n    if( index < 0){\r\n      index = this.formatMap[formatName];\r\n    }\r\n    \r\n    this.color = this.service.toFormat(value, index);\r\n    this.setPreviewColor(value);\r\n    this.triggerInstance.setColor(this.color, this.previewColor);\r\n  }\r\n\r\n  setPreviewColor(value: Hsva) {\r\n    this.previewColor = value\r\n      ? this.service.hsvaToRgba(value).toString()\r\n      : undefined;\r\n  }\r\n  hsvaToRgba;\r\n  onChange() {\r\n    // this.triggerInstance.onChange();\r\n  }\r\n\r\n  public onColorClick(color) {\r\n    if (typeof color == 'string' || color === undefined) {\r\n      this.changeColor(color);\r\n    } else {\r\n      this.variants = color.variants;\r\n      this.menu = 2;\r\n    }\r\n  }\r\n\r\n  public addColor() {\r\n    this.menu = 3;\r\n    this.backupColor = this.color;\r\n    // this.color = \"#FF0000\";\r\n    this.temporalColor = this.service.stringToHsva(this.color);\r\n  }\r\n\r\n  public nextFormat() {\r\n    if (this.canChangeFormat) {\r\n      this.format = (this.format + 1) % this.colorFormats.length;\r\n\r\n      let formatName = this.colorFormats[this.format];\r\n      let index = this.formatMap[formatName];\r\n\r\n      this.setColor(this.hsva, index);\r\n      this.placeholder = this.service.toFormat(\r\n        new Hsva(0, 0, 1, 1),\r\n        index\r\n      );\r\n    }\r\n  }\r\n\r\n  public emitClose(status: 'cancel' | 'accept') {\r\n    if (this.menu == 3) {\r\n      if (status == 'cancel') {\r\n      } else if (status == 'accept') {\r\n        this.setColor(this.temporalColor);\r\n      }\r\n    }\r\n    this.triggerInstance.closePanel();\r\n  }\r\n\r\n  public onClickBack() {\r\n    if (this.menu == 3) {\r\n      this.color = this.backupColor;\r\n      this.hsva = this.service.stringToHsva(this.color);\r\n    }\r\n    this.indexSeleccionado = this.findIndexSelectedColor(this.palette);\r\n    this.menu = 1;\r\n  }\r\n\r\n  isOutside(event) {\r\n    return event.target.classList.contains('ngx-colors-overlay');\r\n  }\r\n}\r\n","export const OVERLAY_STYLES = {\r\n  position: 'fixed',\r\n  height: '100%',\r\n  width: '100%',\r\n  'z-index': 2000,\r\n  top: 0,\r\n  left: 0,\r\n}\r\n","import {\r\n  Injectable,\r\n  ComponentFactoryResolver,\r\n  Injector,\r\n  Inject,\r\n  TemplateRef,\r\n  Type,\r\n  ComponentFactory,\r\n  ApplicationRef,\r\n  EmbeddedViewRef,\r\n  ComponentRef,\r\n} from \"@angular/core\";\r\nimport { DOCUMENT } from \"@angular/common\";\r\nimport { PanelComponent } from \"../components/panel/panel.component\";\r\nimport { OVERLAY_STYLES } from \"./overlay-styles\";\r\n\r\n@Injectable()\r\nexport class PanelFactoryService {\r\n  constructor(\r\n    private resolver: ComponentFactoryResolver,\r\n    private applicationRef: ApplicationRef,\r\n    private injector: Injector\r\n  ) {}\r\n\r\n  componentRef: ComponentRef<PanelComponent>;\r\n  _factory: ComponentFactory<PanelComponent>;\r\n  overlay;\r\n\r\n  createPanel(\r\n    attachTo: string | undefined,\r\n    overlayClassName: string | undefined\r\n  ): ComponentRef<PanelComponent> {\r\n    if (this.componentRef != undefined) {\r\n      this.removePanel();\r\n    }\r\n    const factory: ComponentFactory<PanelComponent> =\r\n      this.resolver.resolveComponentFactory(PanelComponent);\r\n\r\n    this.componentRef = factory.create(this.injector);\r\n    this.applicationRef.attachView(this.componentRef.hostView);\r\n    const domElem = (this.componentRef.hostView as EmbeddedViewRef<any>)\r\n      .rootNodes[0] as HTMLElement;\r\n\r\n    this.overlay = document.createElement(\"div\");\r\n    this.overlay.id = \"ngx-colors-overlay\";\r\n    this.overlay.classList.add(\"ngx-colors-overlay\");\r\n    this.overlay.classList.add(overlayClassName);\r\n    Object.keys(OVERLAY_STYLES).forEach((attr: string) => {\r\n      this.overlay.style[attr] = OVERLAY_STYLES[attr];\r\n    });\r\n    if (attachTo) {\r\n      document.getElementById(attachTo).appendChild(this.overlay);\r\n    } else {\r\n      document.body.appendChild(this.overlay);\r\n    }\r\n    this.overlay.appendChild(domElem);\r\n\r\n    return this.componentRef;\r\n  }\r\n\r\n  removePanel() {\r\n    this.applicationRef.detachView(this.componentRef.hostView);\r\n    this.componentRef.destroy();\r\n    this.overlay.remove();\r\n  }\r\n}\r\n","import {\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  Directive,\r\n  ElementRef,\r\n  ComponentRef,\r\n  HostListener,\r\n  forwardRef,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport { PanelFactoryService } from '../services/panel-factory.service';\r\nimport { PanelComponent } from '../components/panel/panel.component';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { NgxColorsColor } from '../clases/color';\r\nimport { ConverterService } from '../services/converter.service';\r\nimport { formats } from '../helpers/formats';\r\nimport { ColorFormats } from '../enums/formats';\r\n\r\n@Directive({\r\n  selector: '[ngx-colors-trigger]',\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => NgxColorsTriggerDirective),\r\n      multi: true,\r\n    },\r\n  ],\r\n})\r\nexport class NgxColorsTriggerDirective\r\n  implements ControlValueAccessor, OnDestroy\r\n{\r\n  //Main input/output of the color picker\r\n  // @Input() color = '#000000';\r\n  // @Output() colorChange:EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  color = '';\r\n\r\n  //This defines the type of animation for the palatte.(slide-in | popup)\r\n  @Input() colorsAnimation: 'slide-in' | 'popup' = 'slide-in';\r\n\r\n  //This is used to set a custom palette of colors in the panel;\r\n  @Input() palette: Array<string> | Array<NgxColorsColor>;\r\n\r\n  @Input() format: string;\r\n  @Input() formats: string[];\r\n  @Input() position: 'top' | 'bottom' = 'bottom';\r\n  @Input() hideTextInput: boolean;\r\n  @Input() hideColorPicker: boolean;\r\n  @Input() attachTo: string | undefined = undefined;\r\n  @Input() overlayClassName: string | undefined = undefined;\r\n  @Input() colorPickerControls: 'default' | 'only-alpha' | 'no-alpha' =\r\n    'default';\r\n  @Input() acceptLabel: string = 'ACCEPT';\r\n  @Input() cancelLabel: string = 'CANCEL';\r\n  // This event is trigger every time the selected color change\r\n  @Output() change: EventEmitter<string> = new EventEmitter<string>();\r\n  // This event is trigger every time the user change the color using the panel\r\n  @Output() input: EventEmitter<string> = new EventEmitter<string>();\r\n  // This event is trigger every time the user change the color using the panel\r\n  @Output() slider: EventEmitter<string> = new EventEmitter<string>();\r\n  @Output() close: EventEmitter<string> = new EventEmitter<string>();\r\n  @Output() open: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  @HostListener('click') onClick() {\r\n    this.openPanel();\r\n  }\r\n  constructor(\r\n    private triggerRef: ElementRef,\r\n    private panelFactory: PanelFactoryService,\r\n    private service: ConverterService\r\n  ) {}\r\n\r\n  panelRef: ComponentRef<PanelComponent>;\r\n  isDisabled: boolean = false;\r\n\r\n  onTouchedCallback: () => void = () => {};\r\n  onChangeCallback: (_: any) => void = () => {};\r\n\r\n  public ngOnDestroy(): void {\r\n    if (this.panelRef) {\r\n      this.panelFactory.removePanel();\r\n    }\r\n  }\r\n\r\n  public openPanel() {\r\n    if (!this.isDisabled) {\r\n      this.panelRef = this.panelFactory.createPanel(\r\n        this.attachTo,\r\n        this.overlayClassName\r\n      );\r\n      this.panelRef.instance.iniciate(\r\n        this,\r\n        this.triggerRef,\r\n        this.color,\r\n        this.palette,\r\n        this.colorsAnimation,\r\n        this.format,\r\n        this.hideTextInput,\r\n        this.hideColorPicker,\r\n        this.acceptLabel,\r\n        this.cancelLabel,\r\n        this.colorPickerControls,\r\n        this.position,\r\n        this.formats\r\n      );\r\n    }\r\n    this.open.emit(this.color);\r\n  }\r\n\r\n  public closePanel() {\r\n    this.panelFactory.removePanel();\r\n    this.onTouchedCallback();\r\n    this.close.emit(this.color);\r\n  }\r\n\r\n  public setDisabledState(isDisabled: boolean): void {\r\n    this.isDisabled = isDisabled;\r\n    this.triggerRef.nativeElement.style.opacity = isDisabled ? 0.5 : 1;\r\n  }\r\n\r\n  public setColor(color, previewColor = \"\") {\r\n    this.writeValue(color, previewColor);\r\n    this.onChangeCallback(color);\r\n    this.input.emit(color);\r\n  }\r\n\r\n  public sliderChange(color) {\r\n    this.slider.emit(color);\r\n  }\r\n\r\n  get value(): string {\r\n    return this.color;\r\n  }\r\n\r\n  set value(value: string) {\r\n    this.setColor(value);\r\n    this.onChangeCallback(value);\r\n  }\r\n\r\n  writeValue(value, previewColor = \"\") {\r\n    if (value !== this.color) {\r\n      if (this.format) {\r\n        let format = formats.indexOf(this.format.toLowerCase());\r\n        value = this.service.stringToFormat(value, format);\r\n      }\r\n      this.color = value;\r\n\r\n      let isCmyk = false;\r\n      if( value && value.startsWith('cmyk')) {\r\n        isCmyk = true;\r\n        if( !previewColor ) {\r\n          previewColor = this.service.stringToFormat(value, ColorFormats.RGBA);\r\n        }\r\n      }\r\n\r\n      this.change.emit( isCmyk ? previewColor : value);\r\n    }\r\n  }\r\n\r\n  registerOnChange(fn: any) {\r\n    this.onChangeCallback = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any) {\r\n    this.onTouchedCallback = fn;\r\n  }\r\n}\r\n","import { Component, Host, OnInit, ChangeDetectorRef, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { NgxColorsTriggerDirective } from './directives/ngx-colors-trigger.directive';\r\n\r\n@Component({\r\n  selector: 'ngx-colors',\r\n  templateUrl: './ngx-colors.component.html',\r\n  styleUrls: ['./ngx-colors.component.scss'],\r\n})\r\nexport class NgxColorsComponent implements OnInit, OnDestroy {\r\n  private triggerDirectiveColorChangeSubscription: Subscription | null = null;\r\n\r\n  constructor(\r\n    private cdRef: ChangeDetectorRef,\r\n    @Host() private triggerDirective: NgxColorsTriggerDirective\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.triggerDirectiveColorChangeSubscription =\r\n      this.triggerDirective.change.subscribe((color) => {\r\n        this.color = color;\r\n        this.cdRef.markForCheck();\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.triggerDirectiveColorChangeSubscription) {\r\n      this.triggerDirectiveColorChangeSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  //IO color\r\n  color: string = this.triggerDirective.color;\r\n}\r\n","<div class=\"app-color-picker\">\r\n  <div class=\"preview\">\r\n    <div class=\"preview-background\">\r\n      <div\r\n        class=\"circle\"\r\n        [class.colornull]=\"!color\"\r\n        [ngStyle]=\"{ background: color }\"\r\n      ></div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from \"@angular/core\";\r\nimport { NgxColorsComponent } from \"./ngx-colors.component\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport { ColorPickerComponent } from \"./components/color-picker/color-picker.component\";\r\nimport { ConverterService } from \"./services/converter.service\";\r\nimport { SliderDirective } from \"./directives/slider.directive\";\r\nimport { PanelComponent } from \"./components/panel/panel.component\";\r\nimport { PanelFactoryService } from \"./services/panel-factory.service\";\r\nimport { NgxColorsTriggerDirective } from \"./directives/ngx-colors-trigger.directive\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    NgxColorsComponent,\r\n    ColorPickerComponent,\r\n    SliderDirective,\r\n    PanelComponent,\r\n    NgxColorsTriggerDirective,\r\n  ],\r\n  imports: [CommonModule],\r\n  providers: [ConverterService, PanelFactoryService],\r\n  exports: [NgxColorsComponent, NgxColorsTriggerDirective],\r\n})\r\nexport class NgxColorsModule {}\r\n","import { AbstractControl, ValidationErrors, ValidatorFn } from \"@angular/forms\";\r\n\r\nexport function validColorValidator(): ValidatorFn {\r\n  return (control: AbstractControl): ValidationErrors | null => {\r\n    const value = control.value;\r\n\r\n    if (!value) {\r\n      return null;\r\n    }\r\n    const rgbTest =\r\n      /^\\s*rgba?\\(\\s*(1?\\d{1,2}|2[0-4]\\d|25[0-5])\\s*,\\s*(1?\\d{1,2}|2[0-4]\\d|25[0-5])\\s*,\\s*(1?\\d{1,2}|2[0-4]\\d|25[0-5])\\s*(,\\s*(0\\.\\d{1,2}|1))?\\s*\\)\\s*$/i;\r\n    const hslTest =\r\n      /^\\s*hsla?\\(\\s*([0-2]?\\d{1,2}|3[0-5]\\d|360)\\s*,\\s*(0|[1-9]{1,2}|100)\\%\\s*,\\s*(0|[1-9]{1,2}|100)\\%\\s*(,\\s*(0\\.\\d{1,2}|1))?\\s*\\)\\s*$/i;\r\n    const hexTest = /^#([A-Fa-f0-9]{8}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/;\r\n\r\n    const colorValid =\r\n      rgbTest.test(value) || hslTest.test(value) || hexTest.test(value);\r\n    return !colorValid ? { invalidColor: true } : null;\r\n  };\r\n}\r\n","/*\r\n * Public API Surface of ngx-colors\r\n */\r\nexport * from \"./lib/directives/ngx-colors-trigger.directive\";\r\nexport * from \"./lib/ngx-colors.component\";\r\nexport * from \"./lib/ngx-colors.module\";\r\nexport * from \"./lib/clases/color\";\r\nexport * from \"./lib/validators/valid-color.validator\";\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.ConverterService","i3.ColorPickerComponent","i1.PanelFactoryService","i2.ConverterService","i1.NgxColorsTriggerDirective"],"mappings":"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"}